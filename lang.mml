use (
	"list"
	"strings"
	"ints"
	logger "log"
	"errors"
	"functions"
	"match"
)

// list
export let (
	fold     list.fold
	foldr    list.foldr
	map      list.map
	filter   list.filter
	contains list.contains
	sort     list.sort
	flat     list.flat
	uniq     list.uniq
	every    list.every
	some     list.some
)

// strings
export let (
	join    strings.join
	joins   strings.joins
	formats strings.formats
)

// ints
export let enum ints.enum

// log
export let log logger.println

// errors
export let (
	onlyErr errors.only
	passErr errors.pass
)

// functions
export let (
	bind     functions.bind
	identity functions.identity
	eq       functions.eq
)

// match
export let (
	any       match.any
	function  match.function
	channel   match.channel
	type      match.type
	listOf    match.listOf
	structOf  match.structOf
	range     match.range
	or        match.or
	and       match.and
	predicate match.predicate
	is        match.is
)
