use (
	"lists"
	"strings"
	"ints"
	logger "log"
	"functions"
	"match"
)

// lists
export let (
	fold     lists.fold
	foldr    lists.foldr
	map      lists.map
	filter   lists.filter
	contains lists.contains
	sort     lists.sort
	flat     lists.flat
	flats    lists.flats
	concat   lists.concat
	concats  lists.concats
	uniq     lists.uniq
	every    lists.every
	some     lists.some
	take     lists.take
)

// strings
export let (
	join    strings.join
	joins   strings.joins
	formats strings.formats
)

// ints
export let enum ints.enum

// log
export let (
	log   logger.println
	fatal logger.fatal
)

// functions
export let (
	bind     functions.bind
	identity functions.identity
	eq       functions.eq
)

// match
export let (
	any        match.any
	function   match.function
	channel    match.channel
	natural    match.natural
	type       match.type
	listOf     match.listOf
	structOf   match.structOf
	range      match.range
	rangeMin   match.rangeMin
	listLength match.listLength
	or         match.or
	and        match.and
	not        match.not
	predicate  match.predicate
	predicates match.predicates
	is         match.is
)
