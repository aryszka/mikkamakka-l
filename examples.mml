fn doSomethingSafe() {
	try {
		doSomething()
	} catch (err) {
		handleError(err)
	} finally {
		finalizeBlock()
	}
}

fn doSomethingSafe() {
	defer finalizeBlock()
	defer recover(handleError)
	doSomething()
}

fn~ makeRequestSafe() {
	try {
		let rsp http.request("http://localhost:9090")
		try {
			handleResponse(rsp)
		} finally {
			rsp.close()
		}
	} catch (err) {
		handleError(err)
	}
}

fn~ makeRequestSafe() {
	defer recover(handleError)
	let rsp http.request("http://localhost:9090")
	defer rsp.close()
	handleResponse(rsp)
}

for let a in b 
