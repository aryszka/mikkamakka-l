42
3.14
"foo"
true
bar
[1, 2, 3]
[a..., b]
[a, b..., c..., d, e]
{}
{a: 1, b: 2, c: 3}
// TODO: {a...}
fn (x, y, ...p) {a: x, b: [y, p]}
a[b]
a[b:]
a[:b]
a[b:c]
a[:]
a()
a(b, c)
a(b, c...)
!a
a + b * c
a && b && c || d && e || f || g
a ? b : c
if a { b() }

switch {
case a:
	b()
case c:
	d()
default:
	e()
}

switch a {
case b:
	c()
case d:
	e()
}

send a b()
receive a
go a(b)
defer a(b)

select {
case a receive b:
	c()
case receive d:
	e()
case send f g():
	h()
default:
	i()
}

for {
	a()
}

for a {
	b()
}

for a in b {
	c()
}

for a in 1:2 {
	b()
}

for a in 1: {
	b()
}

for a in :2 {
	b()
}

for a in : {
	b()
}

let (
	a b
	c d
)

set (
	a    b
	c[d] e
)

fn () {
	return 42
}

{a..., b: c}

use "foo"
